name: Generate Tech Stack Cube 
on:
  # Run weekly on Sunday
  schedule:
    - cron: '0 0 * * 0'
  # Run on push to main branch
  push:
    branches: [ main ]
  # Allow manual trigger
  workflow_dispatch:

jobs:
  generate-tech-stack-svg:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Create script directory
      run: mkdir -p .github/scripts
    
    - name: Create script file
      run: |
        cat > .github/scripts/generate-tech-stack-cube.js << 'EOL'
        const fs = require('fs');
        const path = require('path');

        // Tech stack icons using GitHub-friendly SVG references
        // These are DevIcon SVGs downloaded and stored directly in your repo
        const techIcons = [
          { name: 'android', color: '#3DDC84' },
          { name: 'c', color: '#A8B9CC' },
          { name: 'figma', color: '#F24E1E' },
          { name: 'firebase', color: '#FFCA28' },
          { name: 'flutter', color: '#02569B' },
          { name: 'googlecloud', color: '#4285F4' },
          { name: 'java', color: '#007396' },
          { name: 'pandas', color: '#150458' },
          { name: 'python', color: '#3776AB' },
          { name: 'dart', color: '#0175C2' },
          { name: 'androidstudio', color: '#3DDC84' },
          { name: 'arduino', color: '#00979D' }
        ];

        // Generate a GitHub-compatible SVG cube with tech icons
        function generateRubiksCube() {
          // Create SVG with pure SVG elements (no foreignObject)
          let svg = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 800 600" width="800" height="600">
            <!-- Title -->
            <text x="400" y="50" font-family="Arial" font-size="24" fill="#333333" text-anchor="middle">Tech Stack</text>
            
            <!-- Cube faces -->
            <g transform="translate(400,300)">
              <!-- Top Row (Front and Side views) -->
              <!-- Front face (simple 2x2 grid) -->
              <g transform="translate(-175, 0)">
                <!-- Border -->
                <rect x="-110" y="-110" width="220" height="220" fill="none" stroke="#8844ee" stroke-width="3" />
                
                <!-- Grid cells with tech icons -->
                <g transform="translate(-55, -55)">
                  <rect width="110" height="110" fill="#2a2a40" />
                  <text x="55" y="75" font-family="Arial" font-size="16" fill="${techIcons[0].color}" text-anchor="middle">${techIcons[0].name}</text>
                </g>
                <g transform="translate(55, -55)">
                  <rect width="110" height="110" fill="#2a2a40" />
                  <text x="55" y="75" font-family="Arial" font-size="16" fill="${techIcons[1].color}" text-anchor="middle">${techIcons[1].name}</text>
                </g>
                <g transform="translate(-55, 55)">
                  <rect width="110" height="110" fill="#2a2a40" />
                  <text x="55" y="75" font-family="Arial" font-size="16" fill="${techIcons[2].color}" text-anchor="middle">${techIcons[2].name}</text>
                </g>
                <g transform="translate(55, 55)">
                  <rect width="110" height="110" fill="#2a2a40" />
                  <text x="55" y="75" font-family="Arial" font-size="16" fill="${techIcons[3].color}" text-anchor="middle">${techIcons[3].name}</text>
                </g>
                
                <!-- Label -->
                <text x="0" y="145" font-family="Arial" font-size="18" fill="#333333" text-anchor="middle">Front</text>
              </g>
            
              <!-- Side face (simple 2x2 grid with perspective) -->
              <g transform="translate(175, 0)">
                <!-- Border with perspective -->
                <path d="M-110,-110 L-90,-130 L130,-130 L110,-110 L110,110 L130,90 L130,-130 M110,110 L-110,110 L-90,90 L130,90" 
                     fill="none" stroke="#8844ee" stroke-width="3" />
                
                <!-- Grid cells with tech icons -->
                <g transform="translate(-55, -55)">
                  <rect width="110" height="110" fill="#2a2a40" />
                  <text x="55" y="75" font-family="Arial" font-size="16" fill="${techIcons[4].color}" text-anchor="middle">${techIcons[4].name}</text>
                </g>
                <g transform="translate(55, -55)">
                  <rect width="110" height="110" fill="#2a2a40" />
                  <text x="55" y="75" font-family="Arial" font-size="16" fill="${techIcons[5].color}" text-anchor="middle">${techIcons[5].name}</text>
                </g>
                <g transform="translate(-55, 55)">
                  <rect width="110" height="110" fill="#2a2a40" />
                  <text x="55" y="75" font-family="Arial" font-size="16" fill="${techIcons[6].color}" text-anchor="middle">${techIcons[6].name}</text>
                </g>
                <g transform="translate(55, 55)">
                  <rect width="110" height="110" fill="#2a2a40" />
                  <text x="55" y="75" font-family="Arial" font-size="16" fill="${techIcons[7].color}" text-anchor="middle">${techIcons[7].name}</text>
                </g>
                
                <!-- Label -->
                <text x="0" y="145" font-family="Arial" font-size="18" fill="#333333" text-anchor="middle">Side</text>
              </g>
              
              <!-- Bottom Row (Top and Back views) -->
              <!-- Top face -->
              <g transform="translate(-175, 240)">
                <!-- Border with perspective -->
                <path d="M-110,-110 L-90,-130 L130,-130 L110,-110 L-110,-110" 
                     fill="none" stroke="#8844ee" stroke-width="3" />
                <rect x="-110" y="-110" width="220" height="220" fill="none" stroke="#8844ee" stroke-width="3" />
                
                <!-- Grid cells with tech icons -->
                <g transform="translate(-55, -55)">
                  <rect width="110" height="110" fill="#2a2a40" />
                  <text x="55" y="75" font-family="Arial" font-size="16" fill="${techIcons[8].color}" text-anchor="middle">${techIcons[8].name}</text>
                </g>
                <g transform="translate(55, -55)">
                  <rect width="110" height="110" fill="#2a2a40" />
                  <text x="55" y="75" font-family="Arial" font-size="16" fill="${techIcons[9].color}" text-anchor="middle">${techIcons[9].name}</text>
                </g>
                <g transform="translate(-55, 55)">
                  <rect width="110" height="110" fill="#2a2a40" />
                  <text x="55" y="75" font-family="Arial" font-size="16" fill="${techIcons[10].color}" text-anchor="middle">${techIcons[10].name}</text>
                </g>
                <g transform="translate(55, 55)">
                  <rect width="110" height="110" fill="#2a2a40" />
                  <text x="55" y="75" font-family="Arial" font-size="16" fill="${techIcons[11].color}" text-anchor="middle">${techIcons[11].name}</text>
                </g>
                
                <!-- Label -->
                <text x="0" y="145" font-family="Arial" font-size="18" fill="#333333" text-anchor="middle">Back</text>
              </g>
              
              <!-- Back face -->
              <g transform="translate(175, 240)">
                <!-- Border with perspective for top -->
                <path d="M-110,-110 L-90,-130 L130,-130 L110,-110 L-110,-110" 
                     fill="none" stroke="#8844ee" stroke-width="3" />
                <!-- Main border -->
                <rect x="-110" y="-110" width="220" height="220" fill="none" stroke="#8844ee" stroke-width="3" />
                
                <!-- Grid cells with tech icons -->
                <g transform="translate(-55, -55)">
                  <rect width="110" height="110" fill="#2a2a40" />
                  <text x="55" y="75" font-family="Arial" font-size="16" fill="${techIcons[0].color}" text-anchor="middle">${techIcons[0].name}</text>
                </g>
                <g transform="translate(55, -55)">
                  <rect width="110" height="110" fill="#2a2a40" />
                  <text x="55" y="75" font-family="Arial" font-size="16" fill="${techIcons[3].color}" text-anchor="middle">${techIcons[3].name}</text>
                </g>
                <g transform="translate(-55, 55)">
                  <rect width="110" height="110" fill="#2a2a40" />
                  <text x="55" y="75" font-family="Arial" font-size="16" fill="${techIcons[6].color}" text-anchor="middle">${techIcons[6].name}</text>
                </g>
                <g transform="translate(55, 55)">
                  <rect width="110" height="110" fill="#2a2a40" />
                  <text x="55" y="75" font-family="Arial" font-size="16" fill="${techIcons[9].color}" text-anchor="middle">${techIcons[9].name}</text>
                </g>
                
                <!-- Label -->
                <text x="0" y="145" font-family="Arial" font-size="18" fill="#333333" text-anchor="middle">Top</text>
              </g>
            </g>
            
            <!-- Footer -->
            <text x="400" y="570" font-family="Arial" font-size="14" fill="#666666" text-anchor="middle">Updated: ${new Date().toISOString().split('T')[0]}</text>
          </svg>`;
          
          // Write the SVG file
          fs.writeFileSync(path.join(process.cwd(), 'tech-stack-cube.svg'), svg);
          console.log('GitHub-compatible tech stack SVG generated successfully!');
          
          // Also generate a README inclusion example
          const readmeExample = `
## My Tech Stack

![Tech Stack Cube](./tech-stack-cube.svg)

*This tech stack visualization is auto-generated weekly.*
          `;
          
          fs.writeFileSync(path.join(process.cwd(), 'tech-stack-readme-example.md'), readmeExample);
          console.log('README example generated.');
        }

        // Run the generator
        generateRubiksCube();
        EOL
    
    - name: Generate Tech Stack Cube SVG
      run: node .github/scripts/generate-tech-stack-cube.js
    
    - name: Commit and Push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add tech-stack-cube.svg tech-stack-readme-example.md
        git commit -m "Update tech stack cube SVG" || echo "No changes to commit"
        git push
